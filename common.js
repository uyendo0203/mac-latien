/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/common.js":
/*!**************************!*\
  !*** ./src/js/common.js ***!
  \**************************/
/***/ (() => {

eval("{// Lazy load images với IntersectionObserver\nvar lazyLoadImages = function lazyLoadImages() {\n  var preloadImage = function preloadImage(img) {\n    return img.src = img.dataset.src;\n  };\n  var configOpts = {\n    rootMargin: \"0px 0px 250px 0px\"\n  };\n  var observer = new IntersectionObserver(function (entries, obs) {\n    entries.forEach(function (entry) {\n      if (entry.isIntersecting) {\n        preloadImage(entry.target);\n        obs.unobserve(entry.target);\n      }\n    });\n  }, configOpts);\n  document.querySelectorAll('.lazy-load').forEach(function (img) {\n    return observer.observe(img);\n  });\n};\n\n// Contact form: Validate và submit form\nvar contactForm = function contactForm() {\n  var validateForm = function validateForm() {\n    var isValid = true;\n    $(\".form-item input, .form-item select\").each(function () {\n      var $field = $(this);\n      var value = $field.val().trim();\n      var fieldType = $field.attr(\"type\");\n      var errorMessage = \"\";\n      if (value === \"\" || value === \"1\") {\n        errorMessage = \"Trường này không được để trống!\";\n        isValid = false;\n      } else if (fieldType === \"email\" && !/^\\S+@\\S+\\.\\S+$/.test(value)) {\n        errorMessage = \"Email không hợp lệ!\";\n        isValid = false;\n      } else if (fieldType === \"number\" && !/^\\d{10,}$/.test(value)) {\n        errorMessage = \"Số điện thoại phải có ít nhất 10 chữ số!\";\n        isValid = false;\n      }\n      $field.siblings(\".error\").remove();\n      if (errorMessage) {\n        $field.after(\"<span class=\\\"error\\\">\".concat(errorMessage, \"</span>\"));\n      }\n    });\n    $(\".submit\").prop(\"disabled\", !isValid);\n    return isValid;\n  };\n  $(\".form-item input, .form-item select\").on(\"input change\", validateForm);\n  $(\"form\").on(\"submit\", function (e) {\n    e.preventDefault();\n    if (validateForm()) {\n      $(\"#noti\").addClass(\"active\");\n      // $(\".toast\").addClass(\"active\");\n\n      // this.submit();\n    }\n  });\n\n  // Kiểm tra nếu có dữ liệu mặc định, tự động enable nút submit\n  var checkDefaultData = function checkDefaultData() {\n    var isFilled = true;\n    $(\".form-item input, .form-item select\").each(function () {\n      var $field = $(this);\n      var value = $field.val().trim();\n      if (value === \"\" || value === \"1\") {\n        isFilled = false;\n      }\n    });\n    $(\".submit\").prop(\"disabled\", !isFilled); // Enable submit nếu có dữ liệu\n  };\n  checkDefaultData();\n};\n$(document).ready(function () {\n  // contactForm();\n  lazyLoadImages();\n  initYouTubePlayer();\n\n  // Nếu bạn sử dụng AOS, khởi tạo nó:\n  var aosInitialized = false;\n  if (typeof AOS !== \"undefined\" && !aosInitialized) {\n    AOS.init({\n      once: true\n    });\n    aosInitialized = true;\n  }\n  $('.loading').removeClass('show');\n\n  // Khi nhấn vào hamburger, toggle class \"open\" cho menu\n  $('.menu-text-span').on('click', function (e) {\n    if ($(window).width() < 767) {\n      e.preventDefault();\n      $('header').toggleClass('active');\n    }\n  });\n\n  // $(\"#noti\").addClass(\"active\");\n  $(\".close-noti\").on(\"click\", function () {\n    $(\"#noti\").removeClass(\"active\");\n  });\n  $(\".toast .close \").on(\"click\", function () {\n    $(\".toast\").removeClass(\"active\");\n  });\n  $(\".register \").on(\"click\", function () {\n    $(\".popup\").addClass(\"active\");\n  });\n  $('.popup-close').click(function () {\n    $('.popup').removeClass('active');\n  });\n  $('.popup').click(function (event) {\n    if (!$(event.target).closest('.popup-content').length) {\n      $('.popup').removeClass('active');\n    }\n  });\n});\n$(window).resize(function () {});\n\n// ==============================\n// YouTube video API & play khi scroll\n// ==============================\n\nvar initYouTubePlayer = function initYouTubePlayer() {\n  // Inject YouTube API script\n  var tag = document.createElement(\"script\");\n  tag.src = \"https://www.youtube.com/player_api\";\n  document.getElementsByTagName(\"script\")[0].parentNode.insertBefore(tag, document.getElementsByTagName(\"script\")[0]);\n};\nvar player;\nfunction onYouTubePlayerAPIReady() {\n  player = new YT.Player(\"video\", {\n    events: {\n      onReady: onPlayerReady\n    }\n  });\n}\nfunction onPlayerReady(event) {\n  // Đảm bảo player đã được tạo và có phương thức playVideo\n  if (player && typeof player.playVideo === 'function') {\n    player.playVideo();\n  } else {\n    console.error(\"Player chưa sẵn sàng hoặc không phải là YT.Player\");\n  }\n}\nvar VideoTvc = $(\"#video-tvc\");\nvar playVideoWhenScrollTo = function playVideoWhenScrollTo(videoE) {\n  var curPos = $(window).scrollTop();\n  var space = 200;\n  if (VideoTvc.length) {\n    var top = VideoTvc.offset().top - space;\n    var bottom = top + VideoTvc.outerHeight();\n    if (curPos >= top && curPos <= bottom) {\n      videoE === null || videoE === void 0 || videoE.playVideo();\n    }\n  }\n};\n$(window).on(\"scroll\", function () {\n  if ($(\"#video-tvc\").length && player) {\n    playVideoWhenScrollTo(player);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/common.js\n\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/common.js"]();
/******/ 	
/******/ })()
;